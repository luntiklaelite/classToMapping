//Generated by EnumGenerator, 25.08.2020 16:05:57
using ITS.Core.Bridges.Domain.Enums;
using System.Collections.Generic;
using System.Linq;

namespace ITS.Core.Bridges.Domain.EnumStrings
{
	/// <summary>
	/// Класс-преобразователь перечисления BridgeSupportSpanType в строку и обратно
	/// </summary>
	public class BridgeSupportSpanTypeStrings : IEnumStrings<BridgeSupportSpanType>
	{
		private static readonly string _elastomeric = "Эластомерная";
		private static readonly string _metal = "Металлическая";
		private static readonly string _combined = "Комбинированная";
		private static readonly string _other = "Прочее";
		private static readonly string _no_data = "Нет данных";

		public BridgeSupportSpanTypeStrings() { }
		private static BridgeSupportSpanTypeStrings instance;
		public static BridgeSupportSpanTypeStrings Instance
		{
			get
			{
				if (instance == null)
				{
					instance = new BridgeSupportSpanTypeStrings();
				}
				return instance;
			}
		}

		public string GetName(BridgeSupportSpanType bridge_support_span_type)
		{
			switch(bridge_support_span_type)
			{
				case BridgeSupportSpanType.Elastomeric:
					return _elastomeric;
				case BridgeSupportSpanType.Metal:
					return _metal;
				case BridgeSupportSpanType.Combined:
					return _combined;
				case BridgeSupportSpanType.Other:
					return _other;
				case BridgeSupportSpanType.NoData:
					return _no_data;
				default:
					break;
			}
			return null;
		}

		public BridgeSupportSpanType GetElement(string name)
		{
			if (name == _elastomeric)
				return BridgeSupportSpanType.Elastomeric;
			if (name == _metal)
				return BridgeSupportSpanType.Metal;
			if (name == _combined)
				return BridgeSupportSpanType.Combined;
			if (name == _other)
				return BridgeSupportSpanType.Other;
			if (name == _no_data)
				return BridgeSupportSpanType.NoData;
			return BridgeSupportSpanType.NoData;
		}
	}
}
