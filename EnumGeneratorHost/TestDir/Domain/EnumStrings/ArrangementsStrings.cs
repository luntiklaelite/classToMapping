//Generated by EnumGenerator, 26.08.2020 11:39:27
using ITS.Core.Bridges.Domain.Enums;
using System.Collections.Generic;
using System.Linq;

namespace ITS.Core.Bridges.Domain.EnumStrings
{
	/// <summary>
	/// Класс-преобразователь перечисления Arrangements в строку и обратно
	/// </summary>
	public class ArrangementsStrings : IEnumStrings<Arrangements>
	{
		private static readonly string StrInspectionTrolleys = "Тележки смотровые";
		private static readonly string StrCradles = "Люльки";
		private static readonly string StrObservationMoves = "Смотровые хода";
		private static readonly string StrHatches = "Люки";
		private static readonly string StrDoors = "Двери";
		private static readonly string StrStairs = "Лестницы";

		public ArrangementsStrings() { }
		private static ArrangementsStrings instance;
		public static ArrangementsStrings Instance
		{
			get
			{
				if (instance == null)
				{
					instance = new ArrangementsStrings();
				}
				return instance;
			}
		}

		public string GetName(Arrangements arrangements)
		{
			switch(arrangements)
			{
				case Arrangements.InspectionTrolleys:
					return StrInspectionTrolleys;
				case Arrangements.Cradles:
					return StrCradles;
				case Arrangements.ObservationMoves:
					return StrObservationMoves;
				case Arrangements.Hatches:
					return StrHatches;
				case Arrangements.Doors:
					return StrDoors;
				case Arrangements.Stairs:
					return StrStairs;
				default:
					break;
			}
			return null;
		}

		public Arrangements GetElement(string name)
		{
			if (name == StrInspectionTrolleys)
				return Arrangements.InspectionTrolleys;
			if (name == StrCradles)
				return Arrangements.Cradles;
			if (name == StrObservationMoves)
				return Arrangements.ObservationMoves;
			if (name == StrHatches)
				return Arrangements.Hatches;
			if (name == StrDoors)
				return Arrangements.Doors;
			if (name == StrStairs)
				return Arrangements.Stairs;
			return Arrangements.Stairs;
		}
	}
}
