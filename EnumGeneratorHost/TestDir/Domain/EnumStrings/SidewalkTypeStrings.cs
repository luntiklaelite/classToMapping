//Generated by EnumGenerator, 22.09.2020 12:17:50
using System;
using System.Text;

namespace ITS.Core.Bridges.Domain.Enums
{
	/// <summary>
	/// Класс-преобразователь перечисления SidewalkType в строку и обратно
	/// </summary>
	public class SidewalkTypeStrings : IEnumStrings<SidewalkType>
	{
		/// <summary>
		/// None
		/// </summary>
		private static readonly string StrТротуаров нет (зоны для прохода пешеходов) = "None";
		/// <summary>
		/// IncreasedFromBlocks
		/// </summary>
		private static readonly string StrПовышенного типа из сборных типовых блоков = "IncreasedFromBlocks";
		/// <summary>
		/// IncreasedFromPiles
		/// </summary>
		private static readonly string StrПовышенного типа из свай = "IncreasedFromPiles";
		/// <summary>
		/// LoweredCarriagewayBlocks
		/// </summary>
		private static readonly string StrПониженные в уровне проезжей части из сборных плит (блоков) = "LoweredCarriagewayBlocks";
		/// <summary>
		/// LoweredCarriagewayMonolithicSlab
		/// </summary>
		private static readonly string StrПониженные в уровне проезжей части с монолитной плитой = "LoweredCarriagewayMonolithicSlab";
		/// <summary>
		/// ClothingAlongTheSlab
		/// </summary>
		private static readonly string StrВ уровне одежды по плите проезжей части = "ClothingAlongTheSlab";
		/// <summary>
		/// Wood
		/// </summary>
		private static readonly string StrДеревянные конструкции = "Wood";
		/// <summary>
		/// ConsolesIncreased
		/// </summary>
		private static readonly string StrНа консолях, повышенного типа = "ConsolesIncreased";
		/// <summary>
		/// ConsolesCarriageway
		/// </summary>
		private static readonly string StrНа консолях, в уровне проезжей части	 = "ConsolesCarriageway";
		/// <summary>
		/// ConsolesLowered
		/// </summary>
		private static readonly string StrНа консолях, пониженного типа = "ConsolesLowered";
		/// <summary>
		/// NoData
		/// </summary>
		private static readonly string StrНет данных = "NoData";

		public SidewalkTypeStrings() { }
		private static SidewalkTypeStrings instance;
		public static SidewalkTypeStrings Instance
			=> instance ?? (instance = new SidewalkTypeStrings());

		public string GetName(SidewalkType enumElement)
		{
			switch(enumElement)
			{
				case SidewalkType.Тротуаров нет (зоны для прохода пешеходов):
					return StrТротуаров нет (зоны для прохода пешеходов);
				case SidewalkType.Повышенного типа из сборных типовых блоков:
					return StrПовышенного типа из сборных типовых блоков;
				case SidewalkType.Повышенного типа из свай:
					return StrПовышенного типа из свай;
				case SidewalkType.Пониженные в уровне проезжей части из сборных плит (блоков):
					return StrПониженные в уровне проезжей части из сборных плит (блоков);
				case SidewalkType.Пониженные в уровне проезжей части с монолитной плитой:
					return StrПониженные в уровне проезжей части с монолитной плитой;
				case SidewalkType.В уровне одежды по плите проезжей части:
					return StrВ уровне одежды по плите проезжей части;
				case SidewalkType.Деревянные конструкции:
					return StrДеревянные конструкции;
				case SidewalkType.На консолях, повышенного типа:
					return StrНа консолях, повышенного типа;
				case SidewalkType.На консолях, в уровне проезжей части	:
					return StrНа консолях, в уровне проезжей части	;
				case SidewalkType.На консолях, пониженного типа:
					return StrНа консолях, пониженного типа;
				case SidewalkType.Нет данных:
					return StrНет данных;
			}
			throw new ArgumentException("Некорректный элемент перечисления", "enumElement");
		}

		public SidewalkType GetElement(string name)
		{
			if (name == StrТротуаров нет (зоны для прохода пешеходов))
				return SidewalkType.Тротуаров нет (зоны для прохода пешеходов);
			if (name == StrПовышенного типа из сборных типовых блоков)
				return SidewalkType.Повышенного типа из сборных типовых блоков;
			if (name == StrПовышенного типа из свай)
				return SidewalkType.Повышенного типа из свай;
			if (name == StrПониженные в уровне проезжей части из сборных плит (блоков))
				return SidewalkType.Пониженные в уровне проезжей части из сборных плит (блоков);
			if (name == StrПониженные в уровне проезжей части с монолитной плитой)
				return SidewalkType.Пониженные в уровне проезжей части с монолитной плитой;
			if (name == StrВ уровне одежды по плите проезжей части)
				return SidewalkType.В уровне одежды по плите проезжей части;
			if (name == StrДеревянные конструкции)
				return SidewalkType.Деревянные конструкции;
			if (name == StrНа консолях, повышенного типа)
				return SidewalkType.На консолях, повышенного типа;
			if (name == StrНа консолях, в уровне проезжей части	)
				return SidewalkType.На консолях, в уровне проезжей части	;
			if (name == StrНа консолях, пониженного типа)
				return SidewalkType.На консолях, пониженного типа;
			if (name == StrНет данных)
				return SidewalkType.Нет данных;
			throw new ArgumentException("Некорректная входная строка", "name");
		}
	}
}
