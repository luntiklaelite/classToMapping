//Generated by EnumGenerator, 27.08.2020 16:47:03
using ITS.Core.Bridges.Domain.Enums;
using System.Collections.Generic;
using System.Linq;

namespace ITS.Core.Bridges.Domain.EnumStrings
{
	/// <summary>
	/// Класс-преобразователь перечисления SidewalkType в строку и обратно
	/// </summary>
	public class SidewalkTypeStrings : IEnumStrings<SidewalkType>
	{
		private static readonly string StrNone = "Тротуаров нет (зоны для прохода пешеходов)";
		private static readonly string StrIncreasedFromBlocks = "Повышенного типа из сборных типовых блоков";
		private static readonly string StrIncreasedFromPiles = "Повышенного типа из свай";
		private static readonly string StrLoweredCarriagewayBlocks = "Пониженные в уровне проезжей части из сборных плит (блоков)";
		private static readonly string StrLoweredCarriagewayMonolithicSlab = "Пониженные в уровне проезжей части с монолитной плитой";
		private static readonly string StrClothingAlongTheSlab = "В уровне одежды по плите проезжей части";
		private static readonly string StrWood = "Деревянные конструкции";
		private static readonly string StrConsolesIncreased = "На консолях, повышенного типа";
		private static readonly string StrConsolesCarriageway = "На консолях, в уровне проезжей части	";
		private static readonly string StrConsolesLowered = "На консолях, пониженного типа";
		private static readonly string StrNoData = "Нет данных";

		public SidewalkTypeStrings() { }
		private static SidewalkTypeStrings instance;
		public static SidewalkTypeStrings Instance
		{
			get
			{
				if (instance == null)
				{
					instance = new SidewalkTypeStrings();
				}
				return instance;
			}
		}

		public string GetName(SidewalkType sidewalk_type)
		{
			switch(sidewalk_type)
			{
				case SidewalkType.None:
					return StrNone;
				case SidewalkType.IncreasedFromBlocks:
					return StrIncreasedFromBlocks;
				case SidewalkType.IncreasedFromPiles:
					return StrIncreasedFromPiles;
				case SidewalkType.LoweredCarriagewayBlocks:
					return StrLoweredCarriagewayBlocks;
				case SidewalkType.LoweredCarriagewayMonolithicSlab:
					return StrLoweredCarriagewayMonolithicSlab;
				case SidewalkType.ClothingAlongTheSlab:
					return StrClothingAlongTheSlab;
				case SidewalkType.Wood:
					return StrWood;
				case SidewalkType.ConsolesIncreased:
					return StrConsolesIncreased;
				case SidewalkType.ConsolesCarriageway:
					return StrConsolesCarriageway;
				case SidewalkType.ConsolesLowered:
					return StrConsolesLowered;
				case SidewalkType.NoData:
					return StrNoData;
				default:
					break;
			}
			return null;
		}

		public SidewalkType GetElement(string name)
		{
			if (name == StrNone)
				return SidewalkType.None;
			if (name == StrIncreasedFromBlocks)
				return SidewalkType.IncreasedFromBlocks;
			if (name == StrIncreasedFromPiles)
				return SidewalkType.IncreasedFromPiles;
			if (name == StrLoweredCarriagewayBlocks)
				return SidewalkType.LoweredCarriagewayBlocks;
			if (name == StrLoweredCarriagewayMonolithicSlab)
				return SidewalkType.LoweredCarriagewayMonolithicSlab;
			if (name == StrClothingAlongTheSlab)
				return SidewalkType.ClothingAlongTheSlab;
			if (name == StrWood)
				return SidewalkType.Wood;
			if (name == StrConsolesIncreased)
				return SidewalkType.ConsolesIncreased;
			if (name == StrConsolesCarriageway)
				return SidewalkType.ConsolesCarriageway;
			if (name == StrConsolesLowered)
				return SidewalkType.ConsolesLowered;
			if (name == StrNoData)
				return SidewalkType.NoData;
			return SidewalkType.NoData;
		}
	}
}
