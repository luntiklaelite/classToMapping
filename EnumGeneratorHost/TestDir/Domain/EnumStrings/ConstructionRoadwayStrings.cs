//Generated by EnumGenerator, 25.08.2020 10:59:08
using ITS.Core.Bridges.Domain.Enums;
using System.Collections.Generic;
using System.Linq;

namespace ITS.Core.Bridges.Domain.EnumStrings
{
	/// <summary>
	/// Класс-преобразователь перечисления ConstructionRoadway в строку и обратно
	/// </summary>
	public class ConstructionRoadwayStrings : IEnumStrings<ConstructionRoadway>
	{
		 public static Dictionary<ConstructionRoadway, string> Strings =
			 new Dictionary<ConstructionRoadway, string> {
				 { ConstructionRoadway.FerroconcreteSlabInMainSupStruct,"Железобетонная плита в составе основной несущей железобетонной конструкции" },
				 { ConstructionRoadway.FerroconcreteSlabWithPiles,"Железобетонная плита, включенная в совместную работу с металлическими главными балками (в сталежелезобетонных пролетных строениях)" },
				 { ConstructionRoadway.FerroconcreteSlabOnPiles,"Железобетонная плита по балкам без объединения" },
				 { ConstructionRoadway.OrthotropicSlab,"Ортотропная плита в составе главных и поперечных балок" },
				 { ConstructionRoadway.Wood,"Деревянная" },
				 { ConstructionRoadway.NoData,"Нет данных" },
			};
		public ConstructionRoadwayStrings() { }
		private static ConstructionRoadwayStrings instance;
		public static ConstructionRoadwayStrings Instance
		{
			get
			{
				if (instance == null)
				{
					instance = new ConstructionRoadwayStrings();
				}
				return instance;
			}
		}

		public string GetName(ConstructionRoadway construction_roadway)
		{
			return Strings[construction_roadway];
		}
		public ConstructionRoadway GetElement(string name)
		{
			return Strings.FirstOrDefault(s => s.Value == name).Key;
		}
	}
}
